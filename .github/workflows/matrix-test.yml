name: matrix-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - main
      - ci-cleanup
jobs:
  build-matrix:
    name: Create Build Matrix
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      id: set-matrix
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # No shallow clone, we need all history
    - name: generate matrix
      id: generate-matrix
      # run: echo "::set-output name=matrix::{\"include\":[$(for changed_folder in $(dirname $(git diff --name-only ${{ github.event.before }}..${{ github.event.after }}) | sort -u); do find $changed_folder -name "*Dockerfile"; done | sed 's/^\|$/"/g'|paste -sd, -)]}"
      run: |
          if [ ${{ github.event_name }} != 'pull_request' ];
          then
            CHANGED_DIRS=$(git diff-tree --no-commit-id --name-only -r ${{ github.event.pull_request.head.sha }} | xargs -I {} dirname {})
          else
            echo "running because of PR"
            CHANGED_DIRS=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs -I {} dirname {})
          fi
          if [ -z "${CHANGED_DIRS}" ];
          echo "initial search for changed dirs failed"
          then
            CHANGED_DIRS=$(dirname $(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}))
            if [ "${CHANGED_DIRS}" == "." ];
            then
              CHANGED_DIRS=
            fi
          fi
          echo "${CHANGED_DIRS}"

          ############################
          ### Plural apply section ###
          ############################

          APP_FOLDERS=$(for CHANGED_DIR in ${CHANGED_DIRS}; do echo ${CHANGED_DIR} | awk -F "/" '{print $1}'; done | sort -u)
          echo "${APP_FOLDERS}"
          APP_APPLY_MATRIX_PROJECTS_JSON="["
          APP_APPLY_MATRIX_INCLUDE_JSON="["

          for APP_FOLDER in ${APP_FOLDERS}; do
            if [[ "${APP_FOLDER}" != "."* ]]; then
              REPO=${APP_FOLDER}
              PLURALFILE=$(find ${REPO} -name "Pluralfile")
              APP_APPLY_MATRIX_PROJECTS_JSON+=$(sed 's/^/"/;s/$/"/' <<< "${REPO}")
              echo "{$APP_APPLY_MATRIX_PROJECTS_JSON}"

              APP_APPLY_MATRIX_INCLUDE_JSON+="{\"repository\": \"${REPO}\", \"pluralfile\": \"${PLURALFILE}\"}"
              echo "${APP_APPLY_MATRIX_INCLUDE_JSON}"
            fi
          done

          echo "{$APP_APPLY_MATRIX_PROJECTS_JSON}"
          echo "${APP_APPLY_MATRIX_INCLUDE_JSON}"
          APP_APPLY_MATRIX_INCLUDE_JSON="${APP_APPLY_MATRIX_INCLUDE_JSON//\}\{/\}, \{}"
          APP_APPLY_MATRIX_INCLUDE_JSON+="]"
          APP_APPLY_MATRIX_PROJECTS_JSON="${APP_APPLY_MATRIX_PROJECTS_JSON//\"\"/\", \"}"
          APP_APPLY_MATRIX_PROJECTS_JSON+="]"
          APP_APPLY_MATRIX_JSON="{\"include\": ${APP_APPLY_MATRIX_INCLUDE_JSON}}"
          echo "${APP_APPLY_MATRIX_JSON}"
          
          CONTINUE_APP_APPLY_JOB="no"
          if [[ "${APP_APPLY_MATRIX_PROJECTS_JSON}" != "[]" && ${{ github.event_name }} != 'pull_request' ]]
          then
            CONTINUE_APP_APPLY_JOB="yes"
          fi

          echo "${CONTINUE_APP_APPLY_JOB}"

          ###############################
          ### Image vendoring section ###
          ###############################

          IMAGE_VENDOR_FILES=$(for CHANGED_DIR in ${CHANGED_DIRS}; do find ${CHANGED_DIR} -name "vendor_images"; done | sort -u)
          echo "${IMAGE_VENDOR_FILES}"
          VENDOR_MATRIX_PROJECTS_JSON="["
          VENDOR_MATRIX_INCLUDE_JSON="["

          for IMAGE_VENDOR_FILE in ${IMAGE_VENDOR_FILES}; do
            REPO=$(dirname ${IMAGE_VENDOR_FILE})

            VENDOR_MATRIX_PROJECTS_JSON+=$(sed 's/^/"/;s/$/"/' <<< "${REPO}")
            echo "{$VENDOR_MATRIX_PROJECTS_JSON}"

            while IFS="" read -r IMAGE || [ -n "${IMAGE}" ]
            do
              VENDOR_MATRIX_INCLUDE_JSON+="{\"repository\": \"${REPO}\", \"image\": \"${IMAGE}\"}"
              echo "${VENDOR_MATRIX_INCLUDE_JSON}"
            done < ${IMAGE_VENDOR_FILE}
          done
          echo "{$VENDOR_MATRIX_PROJECTS_JSON}"
          echo "${VENDOR_MATRIX_INCLUDE_JSON}"
          VENDOR_MATRIX_INCLUDE_JSON="${VENDOR_MATRIX_INCLUDE_JSON//\}\{/\}, \{}"
          VENDOR_MATRIX_INCLUDE_JSON+="]"
          VENDOR_MATRIX_PROJECTS_JSON="${VENDOR_MATRIX_PROJECTS_JSON//\"\"/\", \"}"
          VENDOR_MATRIX_PROJECTS_JSON+="]"
          VENDOR_MATRIX_JSON="{\"include\": ${VENDOR_MATRIX_INCLUDE_JSON}}"
          echo "${VENDOR_MATRIX_JSON}"
          
          CONTINUE_VENDOR_JOB="no"
          if [[ "${VENDOR_MATRIX_PROJECTS_JSON}" != "[]" && ${{ github.event_name }} != 'pull_request' ]]
          then
            CONTINUE_VENDOR_JOB="yes"
          fi

          echo "${CONTINUE_VENDOR_JOB}"

          ######################
          ### Output section ###
          ######################

          echo "::set-output name=continue_vendor::${CONTINUE_VENDOR_JOB}"
          echo "::set-output name=vendor_matrix::${VENDOR_MATRIX_JSON}"
          echo "::set-output name=continue_app_apply::${CONTINUE_APP_APPLY_JOB}"
          echo "::set-output name=app_apply_matrix::${APP_APPLY_MATRIX_JSON}"
    outputs:
      vendor_matrix: ${{ steps.generate-matrix.outputs.vendor_matrix }}
      continue_vendor: ${{ steps.generate-matrix.outputs.continue_vendor }}
      app_apply_matrix: ${{ steps.generate-matrix.outputs.app_apply_matrix }}
      continue_app_apply: ${{ steps.generate-matrix.outputs.continue_app_apply }}
  vendor-plural:
    if: needs.build-matrix.outputs.continue_vendor == 'yes'
    name: Vendor application images
    needs: build-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
     matrix: ${{ fromJson(needs.build-matrix.outputs.vendor_matrix) }}
    steps:
    - uses: actions/checkout@v2
    - uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: 'projects/${{ secrets.GOOGLE_PROJECT_ID }}/locations/global/workloadIdentityPools/github/providers/github'
        service_account: 'terraform@pluralsh.iam.gserviceaccount.com'
        token_format: 'access_token'
        create_credentials_file: true
    - uses: google-github-actions/setup-gcloud@v0.3.0
    - name: Login to gcr
      run: gcloud auth configure-docker -q
    - name: Login to plural registry
      uses: docker/login-action@v1
      with:
        registry: dkr.plural.sh
        username: mjg@plural.sh
        password: ${{ secrets.PLURAL_ACCESS_TOKEN }}
    - name: "Vendor image"
      uses: ./.github/actions/vendor
      id: vendor
      with:
        img: ${{ matrix.image }}
        repo: ${{ matrix.repository }}
