global:
  rbac:
    pspEnabled: false

redisPassword: ""

loki-distributed:
  serviceMonitor:
    enabled: true
  prometheusRule:
    enabled: true
  serviceAccount:
    name: loki
  ingester:
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
      name: redis-password
  distributor:
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
      name: redis-password
  querier:
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
      name: redis-password
  queryFrontend:
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
      name: redis-password
  tableManager:
    enabled: false
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
      name: redis-password
  gateway:
    enabled: true
  compactor:
    enabled: true
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
      name: redis-password
  ruler:
    enabled: true
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
      name: redis-password
  indexGateway:
    enabled: true
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
      name: redis-password
    persistence:
      enabled: true
  loki:
    config: ""
    structuredConfig:
      auth_enabled: false
      server:
        http_listen_port: 3100
      distributor:
        ring:
          kvstore:
            store: memberlist
      memberlist:
        join_members:
          - '{{ include "loki.fullname" . }}-memberlist'
      ingester:
        chunk_target_size: 1536000
        max_chunk_age: 1h
        lifecycler:
          ring:
            kvstore:
              store: memberlist
            replication_factor: 1
        chunk_idle_period: 30m
        chunk_block_size: 262144
        chunk_encoding: snappy
        chunk_retain_period: 1m
        max_transfer_retries: 0
        wal:
          dir: /var/loki/wal
      limits_config:
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        max_cache_freshness_per_query: 10m
      chunk_store_config:
        max_look_back_period: 0s
        chunk_cache_config:
          redis:
            endpoint: redis-master.redis:6379
            db: 6
            password: ${REDIS_PASSWORD}
        write_dedupe_cache_config:
          redis:
            endpoint: redis-master.redis:6379
            db: 7
            password: ${REDIS_PASSWORD}
      compactor:
        shared_store: filesystem
      table_manager:
        retention_deletes_enabled: false
        retention_period: 0s
      query_range:
        align_queries_with_step: true
        max_retries: 5
        split_queries_by_interval: 15m
        cache_results: true
        results_cache:
          cache:
            redis:
              endpoint: redis-master.redis:6379
              db: 8
              password: ${REDIS_PASSWORD}
            enable_fifocache: true
            fifocache:
              max_size_items: 1024
              validity: 24h
      frontend_worker:
        frontend_address: '{{ include "loki.queryFrontendFullname" . }}:9095'
      frontend:
        log_queries_longer_than: 5s
        compress_responses: true
        tail_proxy_url: http://{{ include "loki.querierFullname" . }}:3100
      ruler:
        storage:
          type: local
          local:
            directory: /etc/loki/rules
        ring:
          kvstore:
            store: memberlist
        rule_path: /tmp/loki/scratch
        alertmanager_url: https://alertmanager.xx
        external_url: https://alertmanager.xx
      storage_config:
        index_queries_cache_config:
          redis:
            endpoint: redis-master.redis:6379
            db: 9
            password: ${REDIS_PASSWORD}
        aws:
          s3: s3://eu-central-1
          bucketnames: my-loki-s3-bucket
        boltdb_shipper:
          shared_store: s3
          index_gateway_client:
            server_address: dns:///{{ include "loki.indexGatewayFullname" . }}:9095
      schema_config:
        configs:
          - from: 2020-09-07
            store: boltdb-shipper
            object_store: aws
            schema: v11
            index:
              prefix: loki_index_
              period: 24h

promtail:
  image:
    registry: gcr.io
    repository: pluralsh/grafana/promtail
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3101"
    prometheus.io/path: /metrics
    prometheus.io/scheme: http
  tolerations:
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute
    operator: Exists
  config:
    lokiAddress: http://monitoring-loki-distributed-gateway/loki/api/v1/push
    snippets:
      pipelineStages:
        - docker:
        - match:
            selector: '{app="ingress-nginx"}'
            stages:
              - replace:
                  expression: '(?:[0-9]{1,3}\.){3}([0-9]{1,3})'
                  replace: '***'
        #     - docker:
            # - json:
            #     expressions:
            #       msec: msec
            #       connection: connection
            #       connection_requests: connection_requests
            #       pid: pid
            #       request_id: request_id
            #       request_length: request_length
            #       remote_addr: remote_addr
            #       remote_user: remote_user
            #       remote_port: remote_port
            #       time_local: time_local
            #       time_iso8601: time_iso8601
            #       request: request
            #       request_uri: request_uri
            #       args: args
            #       status: status
            #       body_bytes_sent: body_bytes_sent
            #       bytes_sent: bytes_sent
            #       http_referer: http_referer
            #       http_user_agent: http_user_agent
            #       http_x_forwarded_for: http_x_forwarded_for
            #       http_host: http_host
            #       server_name: server_name
            #       request_time: request_time
            #       upstream: upstream_addr
            #       upstream_connect_time: upstream_connect_time
            #       upstream_header_time: upstream_header_time
            #       upstream_response_time: upstream_response_time
            #       upstream_response_length: upstream_response_length
            #       upstream_cache_status: upstream_cache_status
            #       ssl_protocol: ssl_protocol
            #       ssl_cipher: ssl_cipher
            #       scheme: scheme
            #       request_method: request_method
            #       server_protocol: server_protocol
            #       pipe: pipe
            #       gzip_ratio: gzip_ratio
            #       http_cf_ray: http_cf_ray
            #       geoip_country_code: geoip_country_code
            # - timestamp:
            #     source: timetime_iso8601
            #     format: RFC3339
            # - labels:
            #     msec:
            #     connection:
            #     connection_requests:
            #     pid:
            #     request_id:
            #     request_length:
            #     remote_addr:
            #     remote_user:
            #     remote_port:
            #     time_local:
            #     request:
            #     request_uri:
            #     args:
            #     status:
            #     body_bytes_sent:
            #     bytes_sent:
            #     http_referer:
            #     http_user_agent:
            #     http_x_forwarded_for:
            #     http_host:
            #     server_name:
            #     request_time:
            #     upstream:
            #     upstream_connect_time:
            #     upstream_header_time:
            #     upstream_response_time:
            #     upstream_response_length:
            #     upstream_cache_status:
            #     ssl_protocol:
            #     ssl_cipher:
            #     scheme:
            #     request_method:
            #     server_protocol:
            #     pipe:
            #     gzip_ratio:
            #     http_cf_ray:
            #     geoip_country_code:
            # - output:
            #     source: request_id